distinct() %>%
pivot_longer(cols = c(2:21),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "3. Sclerotia, %",
no_samples = "No. of samples")
sf_df <- sf_201213_df %>%
full_join(sf_201314_df) %>%
full_join(sf_201415_df) %>%
full_join(sf_201516_df) %>%
full_join(sf_201617_df) %>%
full_join(sf_201718_df) %>%
full_join(sf_201819_df) %>%
full_join(sf_201920_df)
str(sf_df)  #here we can see that some changes need to be make to the variable classes
sf_df$harvest_year <- as.factor(sf_df$harvest_year)
sf_df$per_scl <- as.numeric(sf_df$per_scl)
sf_df$no_samples <- as.numeric(sf_df$no_samples)
sf_df <-  sf_df %>%
mutate(over_th = case_when(per_scl == 0 ~ "No sclerotia detected",
per_scl > 0 & per_scl < 0.2 ~ "Under all thresholds",
per_scl >= 0.2 & per_scl < 4 ~ "Above SANSOR threshold (0.2%)",
per_scl >=4 ~ "Above DAFF threshold (4%)"))
silo_regions <- read.csv("data/silo_regions.csv") %>% select(-X)
silo_regions <- silo_regions %>%
rename(region = number)
silo_regions$region <- as.character(silo_regions$region)
sf_silo <- sf_df %>% full_join(silo_regions) #note there will be NAs introduced as some years there were no recording/reportings of sclerotia at particular silo points.
#2011-2012
sb_2012_1 <- read_xlsx("data/soyabean/soya_part_1_2011_2012.xls.xlsx")
sb_2012_2 <- read_xlsx("data/soyabean/soya_part_2_2011_2012.xls.xlsx")
sb_2012_3 <- read_xlsx("data/soyabean/soya_part_3_2011_2012.xls.xlsx")
sb_2012_4 <- read_xlsx("data/soyabean/soya_part_4_2011_2012.xls.xlsx")
#2012-2013
sb_2013_1 <- read_xlsx("data/soyabean/soya_part_1_2012_2013.xls.xlsx")
sb_2013_2 <- read_xlsx("data/soyabean/soya_part_2_2012_2013.xls.xlsx")
sb_2013_3 <- read_xlsx("data/soyabean/soya_part_3_2012_2013.xls.xlsx")
sb_2013_4 <- read_xlsx("data/soyabean/soya_part_4_2012_2013.xls.xlsx")
#2013-2014
sb_2014_1 <- read_xlsx("data/soyabean/soya_part_1_2013_2014.xls.xlsx")
sb_2014_2 <- read_xlsx("data/soyabean/soya_part_2_2013_2014.xls.xlsx")
sb_2014_3 <- read_xlsx("data/soyabean/soya_part_3_2013_2014.xls.xlsx")
sb_2014_4 <- read_xlsx("data/soyabean/soya_part_4_2013_2014.xls.xlsx")
sb_2014_5 <- read_xlsx("data/soyabean/soya_part_5_2013_2014.xls.xlsx")
#2014-2015
sb_2015_1 <- read_xlsx("data/soyabean/soya_part_1_2014_2015.xls.xlsx")
sb_2015_2 <- read_xlsx("data/soyabean/soya_part_2_2014_2015.xls.xlsx")
sb_2015_3 <- read_xlsx("data/soyabean/soya_part_3_2014_2015.xls.xlsx")
sb_2015_4 <- read_xlsx("data/soyabean/soya_part_4_2014_2015.xls.xlsx")
#2015-2016
sb_2016_1 <- read_xlsx("data/soyabean/soya_part_1_2015_2016.xls.xlsx")
sb_2016_2 <- read_xlsx("data/soyabean/soya_part_2_2015_2016.xls.xlsx")
sb_2016_3 <- read_xlsx("data/soyabean/soya_part_3_2015_2016.xls.xlsx")
sb_2016_4 <- read_xlsx("data/soyabean/soya_part_4_2015_2016.xls.xlsx")
#2016-2017
sb_2017_1 <- read_xlsx("data/soyabean/soya_part_1_2016_2017.xls.xlsx")
sb_2017_2 <- read_xlsx("data/soyabean/soya_part_2_2016_2017.xls.xlsx")
sb_2017_3 <- read_xlsx("data/soyabean/soya_part_3_2016_2017.xls.xlsx")
sb_2017_4 <- read_xlsx("data/soyabean/soya_part_4_2016_2017.xls.xlsx")
#2017-2018
sb_2018_1 <- read_xlsx("data/soyabean/soya_part_1_2017_2018.xls.xlsx")
sb_2018_2 <- read_xlsx("data/soyabean/soya_part_2_2017_2018.xls.xlsx")
sb_2018_3 <- read_xlsx("data/soyabean/soya_part_3_2017_2018.xls.xlsx")
sb_2018_4 <- read_xlsx("data/soyabean/soya_part_4_2017_2018.xls.xlsx")
#2018-2019
sb_2019_1 <- read_xlsx("data/soyabean/soya_part_1_2018_2019.xls.xlsx")
sb_2019_2 <- read_xlsx("data/soyabean/soya_part_2_2018_2019.xls.xlsx")
sb_2019_3 <- read_xlsx("data/soyabean/soya_part_3_2018_2019.xls.xlsx")
#2019-2020
sb_2020_1 <- read_xlsx("data/soyabean/soya_part_1_2019_2020.xls.xlsx")
sb_2020_2 <- read_xlsx("data/soyabean/soya_part_2_2019_2020.xls.xlsx")
sb_2020_3 <- read_xlsx("data/soyabean/soya_part_3_2019_2020.xls.xlsx")
sb_2020_4 <- read_xlsx("data/soyabean/soya_part_4_2019_2020.xls.xlsx")
#2012
sb_2012_1[,2:7]<- lapply(sb_2012_1[,2:7], as.character) #sample number name needed to be changed in raw files
sb_2012_2[,2:7]<- lapply(sb_2012_2[,2:7], as.character)
sb_2012_3[,2:7]<- lapply(sb_2012_3[,2:7], as.character)
sb_2012_4[,2:6]<- lapply(sb_2012_4[,2:6], as.character)
sb_201112_df <- sb_2012_1 %>% #10-15
full_join(sb_2012_2) %>% #17-24
full_join(sb_2012_3) %>% #25-30
full_join(sb_2012_4) %>% #31-36
dplyr::mutate(harvest_year = "2012") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:24),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%  #seems to be an error here...
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
#2013
sb_2013_1[,2:7]<- lapply(sb_2013_1[,2:7], as.character)
sb_2013_2[,2:7]<- lapply(sb_2013_2[,2:7], as.character)
sb_2013_3[,2:7]<- lapply(sb_2013_3[,2:7], as.character)
sb_2013_4[,2]<- lapply(sb_2013_4[,2], as.character)
sb_201213_df <- sb_2013_1 %>%
full_join(sb_2013_2) %>%
full_join(sb_2013_3) %>%
full_join(sb_2013_4) %>%
mutate(harvest_year = "2013") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:20),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
#2014
sb_2014_1[,2:7]<- lapply(sb_2014_1[,2:7], as.character)
sb_2014_2[,2:7]<- lapply(sb_2014_2[,2:7], as.character)
sb_2014_3[,2:7]<- lapply(sb_2014_3[,2:7], as.character)
sb_2014_4[,2:7]<- lapply(sb_2014_4[,7], as.character)
sb_2014_5[,2]<- lapply(sb_2014_5[,2], as.character)
sb_201314_df <- sb_2014_1 %>%
full_join(sb_2014_2) %>%
full_join(sb_2014_3) %>%
full_join(sb_2014_4) %>%
full_join(sb_2014_5) %>%
mutate(harvest_year = "2014") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:26),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
#2015
sb_2015_1[,2:7]<- lapply(sb_2015_1[,2:7], as.character)
sb_2015_2[,2:7]<- lapply(sb_2015_2[,2:7], as.character)
sb_2015_3[,2:7]<- lapply(sb_2015_3[,2:7], as.character)
sb_2015_4[,2]<- lapply(sb_2015_4[,2], as.character)
sb_201415_df <- sb_2015_1 %>%
full_join(sb_2015_2) %>%
full_join(sb_2015_3) %>%
full_join(sb_2015_4) %>%
mutate(harvest_year = "2015") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:25),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
#2016
sb_2016_1[,2:7]<- lapply(sb_2016_1[,2:7], as.character)
sb_2016_2[,2:7]<- lapply(sb_2016_2[,2:7], as.character)
sb_2016_3[,2:7]<- lapply(sb_2016_3[,2:7], as.character)
sb_2016_4[,2:5]<- lapply(sb_2016_4[,2:5], as.character)
sb_201516_df <- sb_2016_1 %>%
full_join(sb_2016_2) %>%
full_join(sb_2016_3) %>%
full_join(sb_2016_4) %>%
mutate(harvest_year = "2016") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:23),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
#2017
sb_2017_1[,2:7]<- lapply(sb_2017_1[,2:7], as.character)
sb_2017_2[,2:7]<- lapply(sb_2017_2[,2:7], as.character)
sb_2017_3[,2:7]<- lapply(sb_2017_3[,2:7], as.character)
sb_2017_4[,2:3]<- lapply(sb_2017_4[,2:3], as.character)
sb_201617_df <- sb_2017_1 %>%
full_join(sb_2017_2) %>%
full_join(sb_2017_3) %>%
full_join(sb_2017_4) %>%
mutate(harvest_year = "2017") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:21),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
#2018
sb_2018_1[,2:7]<- lapply(sb_2018_1[,2:7], as.character)
sb_2018_2[,2:7]<- lapply(sb_2018_2[,2:7], as.character)
sb_2018_3[,2:7]<- lapply(sb_2018_3[,2:7], as.character)
sb_2018_4[,2]<- lapply(sb_2018_4[,2], as.character)
sb_201718_df <- sb_2018_1 %>%
full_join(sb_2018_2) %>%
full_join(sb_2018_3) %>%
full_join(sb_2018_4) %>%
mutate(harvest_year = "2018") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:20),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
#2019
sb_2019_1[,2:7]<- lapply(sb_2019_1[,2:7], as.character)
sb_2019_2[,2:7]<- lapply(sb_2019_2[,2:7], as.character)
sb_2019_3[,2:7]<- lapply(sb_2019_3[,2:7], as.character)
sb_201819_df <- sb_2019_1 %>%
full_join(sb_2019_2) %>%
full_join(sb_2019_3) %>%
mutate(harvest_year = "2019") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:19),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
#2020
sb_2020_1[,2:7]<- lapply(sb_2020_1[,2:7], as.character)
sb_2020_2[,2:7]<- lapply(sb_2020_2[,2:7], as.character)
sb_2020_3[,2:7]<- lapply(sb_2020_3[,2:7], as.character)
sb_2020_4[,2:6]<- lapply(sb_2020_4[,2:6], as.character)
sb_201920_df <- sb_2020_1 %>%
full_join(sb_2020_2) %>%
full_join(sb_2020_3) %>%
full_join(sb_2020_4) %>%
mutate(harvest_year = "2020") %>%
rename(desc = Region) %>%
filter(desc %in% c("(F) Sclerotia, %", "No. of samples_scl")) %>%
distinct() %>%
pivot_longer(cols = c(2:24),
names_to = "region",
values_to = "per_sclerotia") %>%
pivot_wider(names_from = "desc",
values_from = "per_sclerotia") %>%
rename(per_scl = "(F) Sclerotia, %",
no_samples = "No. of samples_scl")
sb_df <- sb_201112_df %>%
full_join(sb_201213_df) %>%
full_join(sb_201314_df) %>%
full_join(sb_201415_df) %>%
full_join(sb_201516_df) %>%
full_join(sb_201617_df) %>%
full_join(sb_201718_df) %>%
full_join(sb_201819_df) %>%
full_join(sb_201920_df)
str(sb_df)  #here we can see that some changes need to be make to the variable classes
sb_df$harvest_year <- as.factor(sb_df$harvest_year)
sb_df$per_scl <- as.numeric(sb_df$per_scl)
sb_df$no_samples <- as.numeric(sb_df$no_samples)
sb_df <-  sb_df %>%
mutate(over_th = case_when(per_scl == 0 ~ "No sclerotia detected",
per_scl > 0 & per_scl < 0.2 ~ "Under all thresholds",
per_scl >= 0.2 & per_scl < 4 ~ "Above SANSOR threshold (0.2%)",
per_scl >=4 ~ "Above DAFF threshold (4%)"))
sb_silo <- sb_df %>% full_join(silo_regions) #note there will be NAs introduced as some years there were no recording/reportings of sclerotia at particular silo points.
sb_silo <-sb_silo %>%
mutate(crop = "Soybean")
sf_silo <- sf_silo %>%
mutate(crop = "Sunflower")
scl_df <- sf_silo %>% full_join(sb_silo) %>%
drop_na(over_th)
str(scl_df)  #here we can see that some changes need to be make to the variable classes
scl_df$harvest_year <- as.factor(scl_df$harvest_year)
scl_df$per_scl <- as.numeric(scl_df$per_scl)
scl_df$no_samples <- as.numeric(scl_df$no_samples)
#Table 1. The number of production regions (n) which participated in sclerotia, produced by Sclerotinia sclerotiorum, recovery determination and prevalence (%) of positive sclerotia recovery from samples between 2011 and 2020.
prev = scl_df %>%
mutate(freq = case_when(per_scl > 0 ~ 1,
per_scl <= 0 ~ 0)) %>%
group_by(crop, harvest_year, freq) %>%
summarise(count = n()) %>%
full_join(scl_df %>%
mutate(total = case_when(per_scl > 0 ~ 1,
per_scl <= 0 ~ 0)) %>%
group_by(crop, harvest_year) %>%
summarise(total = n()))
prev = prev %>%
filter(freq >= 1) %>%
mutate(prev = count/total*100) %>%
select(crop, harvest_year, total, prev)
write.csv(prev, "vis/scl_recovery.csv")
#total number of silos
prev %>%
group_by(crop) %>%
summarise(total = sum(total, na.rm = T))
#maximum and mimimum per crop per annum
scl_df %>%
group_by(crop, harvest_year) %>%
summarise(total  = sum(no_samples, na.rm = T)) %>%
summarise(min = min(total, na.rm = T),
max = max(total, na.rm = T))
#min and max prevalence
prev %>%
group_by(crop) %>%
summarise(min = min(prev, na.rm= T),
max = max(prev, na.rm= T))
#Table 2. One-way analysis of variance of sclerotia, produced by Sclerotinia sclerotiorum, percentage recovery from samples collected from soybean and sunflower production regions from 2012 and 2013, respectively.
options(scipen = 999)
#soybean
res.aov.sb <- aov(per_scl ~ harvest_year, data = scl_df %>%
filter(crop =="Soybean"))
summary(res.aov.sb)
#sunflower
res.aov.sf <- aov(per_scl ~ harvest_year, data = scl_df %>%
filter(crop =="Sunflower"))
# Summary of the analysis
summary(res.aov.sf)
ggplot()+
geom_jitter(data = scl_df %>% filter(crop == "Soybean"),
aes(harvest_year, per_scl), colour = "darkgreen", alpha = 0.6, width = 0.2)+
geom_col(data = scl_df %>% filter(crop == "Soybean") %>%
group_by(harvest_year) %>%
dplyr::summarise(mean_per = mean(per_scl)),
aes(harvest_year, mean_per), fill = "darkgreen", alpha = 0.2, size = 4)+
geom_errorbar(width = 0.1, colour = "grey40",
data = scl_df %>% filter(crop == "Soybean") %>%
group_by(harvest_year) %>%
dplyr::summarise(
n = n(),
sd = sd(per_scl),
se = sd/sqrt(n),
mean_area = mean(per_scl),
lwr_ci = mean_area+ qt(p = 0.025, df = n-1)*se,
upr_ci = mean_area+ qt(p = 0.975, df = n-1)*se),
aes(x = harvest_year, ymin = lwr_ci, ymax = upr_ci))+
geom_text(data = scl_df %>%
filter(crop == "Soybean") %>%
group_by(harvest_year) %>%
summarise(N = sum(no_samples)),
aes(harvest_year, 0.4, label = N))+
theme_clean(base_size = 12)+
scale_y_continuous(breaks = seq(0,0.6, 0.1))+
scale_x_discrete(limits =  c("2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"))+
labs(
x = "Year",
y = "Sclerotia (%) per soybean sample")+
ggsave("vis/recovery_sb.png", units = "cm", width = 20, height = 12, dpi = 600)
knitr::opts_chunk$set(echo = TRUE)
ggplot()+
geom_jitter(data = scl_df %>% filter(crop == "Soybean"),
aes(harvest_year, per_scl), colour = "darkgreen", alpha = 0.6, width = 0.2)+
geom_col(data = scl_df %>% filter(crop == "Soybean") %>%
group_by(harvest_year) %>%
dplyr::summarise(mean_per = mean(per_scl)),
aes(harvest_year, mean_per), fill = "darkgreen", alpha = 0.2, size = 4)+
geom_errorbar(width = 0.1, colour = "grey40",
data = scl_df %>% filter(crop == "Soybean") %>%
group_by(harvest_year) %>%
dplyr::summarise(
n = n(),
sd = sd(per_scl),
se = sd/sqrt(n),
mean_area = mean(per_scl),
lwr_ci = mean_area+ qt(p = 0.025, df = n-1)*se,
upr_ci = mean_area+ qt(p = 0.975, df = n-1)*se),
aes(x = harvest_year, ymin = lwr_ci, ymax = upr_ci))+
geom_text(data = scl_df %>%
filter(crop == "Soybean") %>%
group_by(harvest_year) %>%
summarise(N = sum(no_samples)),
aes(harvest_year, 0.4, label = N))+
theme_clean(base_size = 12)+
scale_y_continuous(breaks = seq(0,0.6, 0.1))+
scale_x_discrete(limits =  c("2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"))+
labs(
x = "Year",
y = "Sclerotia (%) per soybean sample")
ggsave("vis/recovery_sb.png", units = "cm", width = 20, height = 12, dpi = 600)
ggplot()+
geom_jitter(data = scl_df %>% filter(crop == "Sunflower"),
aes(harvest_year, per_scl), colour = "orange", alpha = 0.6, width = 0.2)+
geom_col(data = scl_df %>% filter(crop == "Sunflower") %>%
group_by(harvest_year) %>%
dplyr::summarise(mean_per = mean(per_scl)),
aes(harvest_year, mean_per), fill = "orange", alpha = 0.2, size = 4)+
geom_errorbar(width = 0.1, colour = "grey40",
data = scl_df %>% filter(crop == "Sunflower") %>%
group_by(harvest_year) %>%
dplyr::summarise(
n = n(),
sd = sd(per_scl),
se = sd/sqrt(n),
mean_area = mean(per_scl),
lwr_ci = mean_area+ qt(p = 0.025, df = n-1)*se,
upr_ci = mean_area+ qt(p = 0.975, df = n-1)*se),
aes(x = harvest_year, ymin = lwr_ci, ymax = upr_ci))+
geom_text(data = scl_df %>%
filter(crop == "Sunflower") %>%
group_by(harvest_year) %>%
summarise(N = sum(no_samples)),
aes(harvest_year, 4, label = N))+
theme_clean(base_size = 12)+
scale_y_continuous(breaks = seq(0,5, 0.5))+
labs(
x = "Year",
y = "Sclerotia (%) per sunflower sample")
ggsave("vis/recovery_sf.png", units = "cm", width = 20, height = 12, dpi = 600)
#Shape files are extracted and fortified for use in plotting
south_africa <- ne_states(country = "south africa",
returnclass = "sf")
zar_df <- fortify(south_africa)# shape file to dataframe
zar =  zar_df %>%
mutate(name = case_when(name == "KwaZulu-Natal" ~ "KwaZulu Natal",
name != "KwaZulu-Natal" ~ name)) %>%
dplyr::rename(province = name)#relabeling
#soybean
scl_df$group <- factor(scl_df$harvest_year, levels = c("2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"))
ggplot()+
geom_sf(data = south_africa)+
geom_text(data = scl_df %>%
filter(crop == "Soybean") %>%
group_by(group) %>%
summarise(n = n()) %>%
mutate(lon = 30, lat = -34),
aes(lon, lat, label = n))+
geom_jitter(data = scl_df %>%
filter(crop == "Soybean"),
aes(lon, lat, colour = over_th), alpha = 0.6, size = 2)+
scale_color_manual(values = c("orange", "blue", "darkgreen"))+
ylim(-35, -22.5) +
xlim(17, 33)+
labs(x = "Longitude",
y = "Latitude",
colour = "Sclerotia thresholds")+
theme_minimal(base_size = 12)+
theme(legend.position = "bottom")+
facet_wrap(~group, ncol = 5)+
ggsave("vis/prod_reg_sb.png", units = "cm", width = 30, height = 15, dpi = 600)
#Shape files are extracted and fortified for use in plotting
south_africa <- ne_states(country = "south africa",
returnclass = "sf")
zar_df <- fortify(south_africa)# shape file to dataframe
zar =  zar_df %>%
mutate(name = case_when(name == "KwaZulu-Natal" ~ "KwaZulu Natal",
name != "KwaZulu-Natal" ~ name)) %>%
dplyr::rename(province = name)#relabeling
#soybean
scl_df$group <- factor(scl_df$harvest_year, levels = c("2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"))
ggplot()+
geom_sf(data = south_africa)+
geom_text(data = scl_df %>%
filter(crop == "Soybean") %>%
group_by(group) %>%
summarise(n = n()) %>%
mutate(lon = 30, lat = -34),
aes(lon, lat, label = n))+
geom_jitter(data = scl_df %>%
filter(crop == "Soybean"),
aes(lon, lat, colour = over_th), alpha = 0.6, size = 2)+
scale_color_manual(values = c("orange", "blue", "darkgreen"))+
ylim(-35, -22.5) +
xlim(17, 33)+
labs(x = "Longitude",
y = "Latitude",
colour = "Sclerotia thresholds")+
theme_minimal(base_size = 12)+
theme(legend.position = "bottom")+
facet_wrap(~group, ncol = 5)
ggsave("vis/prod_reg_sb.png", units = "cm", width = 30, height = 15, dpi = 600)
# sunflower
ggplot()+
geom_sf(data = south_africa)+
geom_jitter(data = scl_df %>%
filter(crop == "Sunflower"),
aes(lon, lat, colour = over_th), alpha = 0.6, size = 2)+
scale_color_manual(values = c("red", "orange", "blue", "darkgreen"))+
geom_text(data = scl_df %>%
filter(crop == "Sunflower") %>%
group_by(harvest_year) %>%
summarise(n = n()) %>%
mutate(lon = 30, lat = -34),
aes(lon, lat, label = n), fontface = 3)+
ylim(-35, -22.5) +
xlim(17, 33)+
labs(x = "Longitude",
y = "Latitude",
colour = "Sclerotia thresholds")+
theme_minimal(base_size = 12)+
theme(legend.position = "bottom")+
facet_wrap(~harvest_year, ncol = 4)
ggsave("vis/prod_reg_sf.png", units = "cm", width = 30, height = 15, dpi = 600)
ggplot()+
geom_sf(data = south_africa)+
geom_jitter(data = silo_regions,
aes(lon, lat), alpha = 0.6, size = 1, width = 0.2)+
geom_text(data = silo_regions,
aes(lon, lat, label = region), size = 4 , fontface = 1, colour = "darkblue")+
ylim(-35, -22.5) +
xlim(17, 33)+
labs(x = "Longitude",
y = "Latitude")+
theme_minimal(base_size = 16)
ggsave("vis/prod_regions.png", units = "cm", width = 20, height = 22, dpi = 600)
